generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role
  customer  Customer?

  @@index([email])
  @@map("users")
}

model Customer {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String?
  address   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String    @unique
  bookings  Booking[]
  user      User      @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([createdAt])
  @@map("customers")
}

model Booking {
  id         Int           @id @default(autoincrement())
  time       DateTime
  vehicle    String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  status     BookingStatus
  totalPay   Decimal       @db.Decimal(10, 2)
  serviceId  Int?
  customerId Int
  customer   Customer      @relation(fields: [customerId], references: [id])
  service    Service?      @relation(fields: [serviceId], references: [id])
  payment    Payment?

  @@index([time])
  @@index([customerId], map: "bookings_customerId_fkey")
  @@index([serviceId], map: "bookings_serviceId_fkey")
  @@map("bookings")
}

model Service {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  price       Decimal   @db.Decimal(10, 2)
  description String
  icon        String
  bookings    Booking[]

  @@map("service")
}

model Payment {
  id            Int           @id @default(autoincrement())
  proofImage    String?
  paymentMethod PaymentMethod
  amount        Decimal       @db.Decimal(10, 2)
  paidAt        DateTime      @default(now())
  bookingId     Int           @unique
  booking       Booking       @relation(fields: [bookingId], references: [id], onDelete: Cascade)

  @@map("payment")
}

enum Role {
  CUSTOMER
  ADMIN
}

enum BookingStatus {
  PENDING
  BOOKED
  COMPLETED
  CANCELED
}

enum PaymentMethod {
  CASH
  QRIS
  BANK
}
